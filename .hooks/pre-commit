#!/usr/bin/env sh

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

printf "Committing as ${YELLOW}$(git config user.name) ${NC}/ ${YELLOW}$(git config user.email)${NC}\n"

PASS=true

CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM -- '*.php')

printf "Running pre commit hook\n"

# easy-ci
PHP_ECI="./vendor/bin/easy-ci"
HAS_PHP_ECI=false
if [ -x $PHP_ECI ]; then
    HAS_PHP_ECI=true
fi

if $HAS_PHP_ECI; then
    printf "Easy CI start"
    # prevent comitting unresolved conflicts or erroneous merges
    $PHP_ECI check-conflicts ./src
    ret_code=$?

    if [[ $ret_code == 1 ]]; then
        PASS=false
    fi

    $PHP_ECI check-commented-code ./src --line-limit 3

    ret_code=$?
    if [[ $ret_code == 1 ]]; then
        PASS=false
    fi

    $PHP_ECI find-multi-classes ./src

    ret_code=$?
    if [[ $ret_code == 1 ]]; then
        PASS=false
    fi

  else
    echo ""
    echo "symplify/easy-ci is required. Install it:"
    echo ""
    echo "  composer require --dev symplify/easy-ci"
    echo ""
fi

# early return
if [[ -z "$CHANGED_FILES" ]]; then
  printf "${YELLOW}No .php files in this commit${NC}\n"
  if ! $PASS; then
    printf "pre commit hook ${RED}FAILED${NC}\n"
    exit 1;
  fi
  exit 0;
fi

# ecs
PHP_ECS="./vendor/bin/ecs"
HAS_PHP_ECS=false

if [ -x $PHP_ECS ]; then
    HAS_PHP_ECS=true
fi

if $HAS_PHP_ECS; then
# if ([ -x $PHP_ECS ] && [ -n "$CHANGED_FILES" ]); then
    printf "ECS start"
    # Get a list of files in the staging area
    FILES=` git status --porcelain | grep -e '^[AM]\(.*\).php$' | cut -c 3- | tr '\n' ' '`
    if [ -z "$FILES" ]; then
          echo "No PHP file exists in commit"
    else
        $PHP_ECS check ${FILES} --fix
        ret_code=$?
        if [[ $ret_code == 0 ]]; then
            echo $FILES > .commit
        else
            # Different code than 0 means that there were unresolved fixes
            PASS=false
        fi
    fi
else
    echo ""
    echo "easy-coding-standard & php-cs-fixer are required. Install them:"
    echo ""
    echo "  composer require --dev symplify/easy-coding-standard friendsofphp/php-cs-fixer"
    echo ""
fi

# phpstan
PHP_STAN="./vendor/bin/phpstan"
if ([ -x $PHP_STAN ] && [ -n "$CHANGED_FILES" ]); then
    printf "PHPStan start"
    if $PHP_STAN analyse --no-progress --memory-limit=1G $CHANGED_FILES; then
      # All good
      printf "${GREEN}PHPStan passed${NC}\n"
    else
      PASS=false
    fi
fi

if ! $PASS; then
  printf "pre commit hook ${RED}FAILED${NC}\n"
  exit 1
else
  printf "pre commit hook ${GREEN}SUCCEEDED${NC}\n"
  exit 0
fi